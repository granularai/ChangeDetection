
name: Initiate polyaxon run based on commit

on:
  push

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GKE_KEY: ${{ secrets.GKE_KEY }}
  REPO_NAME: ${{ github.event.repository.name }}
  GKE_ZONE: us-central1-a
  GKE_CLUSTER: granular-kubeflow
  KUBEFLOW_SA_GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.KUBEFLOW_SA_GOOGLE_APPLICATION_CREDENTIALS }}

jobs:
  prepare-and-install:
    if: "contains(github.event.head_commit.message, 'RUN@')"
    name: Port forward polyaxon cluster and deploy run
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'

    - name: Install dependencies
      run: python -m pip install --upgrade pip setuptools wheel polyaxon

    - name: gcloud-setup    # Setup gcloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
        export_default_credentials: false

    - name: Cluster-authentication    # Get the GKE credentials so we can deploy to the cluster
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: install tooling
      run: |
            sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
            sudo chmod +x /usr/local/bin/yq

    - name: Update Polyaxonfile Revision
      run: |

    - name: port-forward
      run: |-
        polyaxon port-forward &

    # This step may fail if project already exists
    - name: create project
      id: create-project
      run: |-
        polyaxon project create --name "$REPO_NAME" || true

    - name: Update polyaxon revision and run
      # if: ${{ steps.create-project.outputs.status == 'failure' || steps.create-project.outputs.status == 'success'  }}
      run: |
        yq write --inplace polyaxonfile.yml 'run.init[0].git.revision' ${{ github.sha }}
        polyaxon run -p "$REPO_NAME" -f polyaxonfile.yml --description "${{ github.event.head_commit.message }}"
